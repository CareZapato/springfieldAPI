{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://http-mocks/lib/utils/query.ts","ng://http-mocks/lib/utils/log.ts","ng://http-mocks/lib/utils/proxy.ts","ng://http-mocks/lib/utils/fetch.ts","ng://http-mocks/lib/utils/delay.ts","ng://http-mocks/lib/utils/xhr.ts","ng://http-mocks/lib/inject-http-mocks.ts","ng://http-mocks/lib/http-mocks.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","e","step","__read","o","m","r","ar","error","parseQueryParams","locationSearch","urlSearchParams","URLSearchParams","queryParams","forEach","key","logMock","_a","_b","_c","method","url","delay","requestQuery","requestBody","requestHeaders","responseBody","responseCode","responseHeaders","console","groupCollapsed","log","group","groupEnd","handleProxyFn","mock","mockRequest","proxyFn","createURL","URL","removeAllBeforeChar","char","includes","split","createAbortError","Error","name","createDelay","defaultClear","clearTimeout","set","setTimeout","willResolve","ms","timeoutId","settle","rejectFn","signal","aborted","Promise","reject","clear","signalListener","delayPromise","resolve","removeEventListener","addEventListener","once","createWithTimers","innerDelay","createXHRMock","loggingEnabled","responseProxyFn","xhrMock","use","mockResponse","_arguments","generator","query","JSON","parse","headers","responseFn","responseData","response","status","P","fulfilled","rejected","result","then","injectHttpMocks","mockScenarios","fallbackToNetwork","_d","_e","useLocationHash","_f","mockScenario","extractMockScenarioFromLocation","window","location","_g","defaultResponseCode","_h","defaultResponseHeaders","_j","defaultDelay","_k","ignoredMocks","setup","overwriteRoutes","ignoredMocksStrings","Array","isArray","map","toString","getScenarioMocks","filter","updatedMock","fetchMock","fetchMockOptions","createdURL","search","createFetchMock","proxy","fallbackToNetworkXHR","config","fallbackToNetworkFetch","hash","replace","defaultMocks","default","selectedMocks","concat","__spread","defaultMock","findIndex","HttpMocksService","setHttpMocks","mockOptions","Injectable","args","providedIn"],"mappings":";;;;;;;;;;;;;;oFA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAuCzB,SAASQ,EAAYC,EAASC,GACjC,IAAsGC,EAAGC,EAAGhB,EAAGiB,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPpB,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOqB,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEM,KAAMC,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BV,EAAEU,OAAOC,UAAY,WAAa,OAAOjB,OAAUM,EACvJ,SAASO,EAAKrB,GAAK,OAAO,SAAU0B,GAAK,OACzC,SAAcC,GACV,GAAIf,EAAG,MAAM,IAAIgB,UAAU,mCAC3B,KAAOb,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAMhB,EAAY,EAAR8B,EAAG,GAASd,EAAU,OAAIc,EAAG,GAAKd,EAAS,SAAOhB,EAAIgB,EAAU,SAAMhB,EAAES,KAAKO,GAAI,GAAKA,EAAEO,SAAWvB,EAAIA,EAAES,KAAKO,EAAGc,EAAG,KAAKE,KAAM,OAAOhC,EAE3J,OADIgB,EAAI,EAAGhB,IAAG8B,EAAK,CAAS,EAARA,EAAG,GAAQ9B,EAAEiC,QACzBH,EAAG,IACP,KAAK,EAAG,KAAK,EAAG9B,EAAI8B,EAAI,MACxB,KAAK,EAAc,OAAXZ,EAAEC,QAAgB,CAAEc,MAAOH,EAAG,GAAIE,MAAM,GAChD,KAAK,EAAGd,EAAEC,QAASH,EAAIc,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKZ,EAAEI,IAAIY,MAAOhB,EAAEG,KAAKa,MAAO,SACxC,QACI,KAAkBlC,GAAZA,EAAIkB,EAAEG,MAAYhB,OAAS,GAAKL,EAAEA,EAAEK,OAAS,MAAkB,IAAVyB,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEZ,EAAI,EAAG,SACjG,GAAc,IAAVY,EAAG,MAAc9B,GAAM8B,EAAG,GAAK9B,EAAE,IAAM8B,EAAG,GAAK9B,EAAE,IAAM,CAAEkB,EAAEC,MAAQW,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYZ,EAAEC,MAAQnB,EAAE,GAAI,CAAEkB,EAAEC,MAAQnB,EAAE,GAAIA,EAAI8B,EAAI,MAC7D,GAAI9B,GAAKkB,EAAEC,MAAQnB,EAAE,GAAI,CAAEkB,EAAEC,MAAQnB,EAAE,GAAIkB,EAAEI,IAAIa,KAAKL,GAAK,MACvD9B,EAAE,IAAIkB,EAAEI,IAAIY,MAChBhB,EAAEG,KAAKa,MAAO,SAEtBJ,EAAKhB,EAAKL,KAAKI,EAASK,GAC1B,MAAOkB,GAAKN,EAAK,CAAC,EAAGM,GAAIpB,EAAI,EAAI,QAAWD,EAAIf,EAAI,EACtD,GAAY,EAAR8B,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEG,MAAOH,EAAG,GAAKA,EAAG,QAAK,EAAQE,MAAM,GArB9BK,CAAK,CAAClC,EAAG0B,MAwCtD,SAASS,EAAOC,EAAGpC,GACtB,IAAIqC,EAAsB,mBAAXb,QAAyBY,EAAEZ,OAAOC,UACjD,IAAKY,EAAG,OAAOD,EACf,IAAmBE,EAAYL,EAA3BlC,EAAIsC,EAAE/B,KAAK8B,GAAOG,EAAK,GAC3B,IACI,WAAc,IAANvC,GAAgBA,KAAM,MAAQsC,EAAIvC,EAAEqB,QAAQS,MAAMU,EAAGP,KAAKM,EAAER,OAExE,MAAOU,GAASP,EAAI,CAAEO,MAAOA,GACjC,QACQ,IACQF,IAAMA,EAAET,OAASQ,EAAItC,EAAU,SAAIsC,EAAE/B,KAAKP,GAE1D,QAAkB,GAAIkC,EAAG,MAAMA,EAAEO,OAE7B,OAAOD,ECjIX,IAAaE,EAAgB,SAC3BC,QAAA,IAAAA,IAAAA,EAAA,QAEMC,EAAkB,IAAIC,gBAAgBF,GAEtCG,EAAc,GAMpB,OAJAF,EAAgBG,SAAO,SAAEhB,EAAeiB,GACtCF,EAAYE,GAAOjB,KAGde,GCVIG,EAAO,SAClBC,EACAC,EACAC,OAFEC,EAAAH,EAAAG,OAAQC,EAAAJ,EAAAI,IAAKC,EAAAL,EAAAK,MACbC,EAAAL,EAAAK,aAAcC,EAAAN,EAAAM,YAAaC,EAAAP,EAAAO,eAC3BC,EAAAP,EAAAO,aAAcC,EAAAR,EAAAQ,aAAcC,EAAAT,EAAAS,gBAE9BC,QAAQC,eAAkBV,EAAM,IAAIC,GAEpCQ,QAAQE,IAAI,UAAWJ,GACvBE,QAAQE,IAAI,SAAUT,GAEtBO,QAAQG,MAAM,WACdH,QAAQE,IAAI,WAAYN,GACxBI,QAAQE,IAAI,SAAUR,GACtBM,QAAQE,IAAI,QAASP,GACrBK,QAAQI,WAERJ,QAAQG,MAAM,YACdH,QAAQE,IAAI,WAAYH,GACxBC,QAAQE,IAAI,QAASL,GACrBG,QAAQI,WAERJ,QAAQI,YCnBGC,EAAa,SACxBR,EACAS,EACAC,EACAC,GAEA,OAAOA,GAA8B,mBAAZA,EACrBA,EACEX,EACA,CACEL,IAAKc,EAAKd,IACVD,OAAQe,EAAKf,OACbO,aAAcQ,EAAKR,aACnBC,gBAAiBO,EAAKP,iBAExBQ,GAEF,CACEV,aAAYA,EACZC,aAAcQ,EAAKR,aACnBC,gBAAiBO,EAAKP,kBC2DxBU,EAAS,SAAIjB,GACjB,IACE,OAAO,IAAIkB,IAAI,GAAGlB,GAClB,MAAOtC,GACP,OAAO,OAQLyD,EAAmB,SAAI1C,EAAe2C,GAC1C,OAAK3C,EAAM4C,SAASD,IAIb,GAAG3C,GAAQ6C,MAAMF,GAAM1C,MAHrB,QCzDL6C,EAAgB,eACdpC,EAAQ,IAAIqC,MAAM,iBAExB,OADArC,EAAMsC,KAAO,aACNtC,GAGIuC,EAAW,SAAI9B,OAC1B+B,EAAA/B,EAAAgC,aACAC,EAAAjC,EAAAkC,WACAC,EAAAnC,EAAAmC,4BACUC,EAAYpC,OAKlBqC,EACAC,EACAC,EAPkBtC,OAAA,IAAAD,EAAA,GAAAA,EAAEnB,EAAAoB,EAAApB,MAAO2D,EAAAvC,EAAAuC,OAC/B,GAAIA,GAAUA,EAAOC,QACnB,OAAOC,QAAQC,OAAOhB,SAMlBiB,EAAQb,GAAgBC,aAExBa,EAAc,WAClBD,EAAMP,GACNE,EAASZ,MASLmB,EAAoB,IAAIJ,SAAO,SAAEK,EAASJ,GAC9CL,EAAM,WANFE,GACFA,EAAOQ,oBAAoB,QAASH,GAOhCV,EACFY,EAAQlE,GAER8D,EAAO9D,IAIX0D,EAAWI,EACXN,GAAaJ,GAAOC,YAAYI,EAAQF,MAa1C,OAVII,GACFA,EAAOS,iBAAiB,QAASJ,EAAgB,CAAEK,MAAM,IAG3DJ,EAAaF,MAAK,WAChBA,EAAMP,GACNA,EAAY,KACZC,KAGKQ,KAGIzC,EAAeyB,EAAY,CAAEK,aAAa,IAEvD9B,EAAMsC,OAASb,EAAY,CAAEK,aAAa,IAC1C9B,EAAM8C,iBAAgB,SAAInD,OAAEgC,EAAAhC,EAAAgC,aAAcE,EAAAlC,EAAAkC,WAClCkB,EAAoBtB,EAAY,CACpCE,aAAYA,EACZE,WAAUA,EACVC,aAAa,IAOf,OALAiB,EAAWT,OAASb,EAAY,CAC9BE,aAAYA,EACZE,WAAUA,EACVC,aAAa,IAERiB,GCrGT,IAUaC,EAAa,SACxBnC,EACAoC,EACAC,GAEAC,EAAQC,IACNvC,EAAKf,OACLe,EAAKd,KAAG,SACDe,EAA6BuC,GAA6B,ONmC3CjG,OMnC2C,ENmClCkG,OMnCkC,ENmCnBC,EMnCmB,6EAyB/D,OAvBMtD,EAAea,EAAYf,MAAMyD,OAAS,GAC1CtD,EACkB,MAAtBY,EAAYzD,OAAiBoG,KAAKC,MAAM5C,EAAYzD,QAAU,GAC1D8C,EAAiBW,EAAY6C,UAG7BvD,EAAeS,EAAK+C,WAAW3D,EAAcC,GAC7C2D,EAA6BjD,EACjCR,EACAS,EACA,CACEZ,aAAYA,EACZC,YAAWA,EACXC,eAAcA,GAEhB+C,GAGIY,EAAWT,EACdU,OAAOF,EAAaxD,cACpBhD,KAAKwG,EAAazD,cAClBuD,QAAQE,EAAavD,iBAExB,CAAA,EAAMN,EAAMa,EAAKb,eAcjB,OAdAL,EAAAhC,OAEIsF,GACFvD,EACEmB,EACA,CACEZ,aAAYA,EACZC,YAAWA,EACXC,eAAcA,GAEhB0D,GAIJ,CAAA,EAAOC,QNHF,KADoCE,OMnCsB,KNoC/CA,EAAI3B,WAAU,SAAUK,EAASJ,GAC/C,SAAS2B,EAAUzF,GAAS,IAAMI,EAAK2E,EAAUzF,KAAKU,IAAW,MAAOG,GAAK2D,EAAO3D,IACpF,SAASuF,EAAS1F,GAAS,IAAMI,EAAK2E,EAAiB,MAAE/E,IAAW,MAAOG,GAAK2D,EAAO3D,IACvF,SAASC,EAAKuF,GAAUA,EAAO5F,KAAOmE,EAAQyB,EAAO3F,OAAS,IAAIwF,GAAE,SAAUtB,GAAWA,EAAQyB,EAAO3F,UAAW4F,KAAKH,EAAWC,GACnItF,GAAM2E,EAAYA,EAAUtG,MAAMG,EAASkG,GAAc,KAAKxF,WAL/D,IAAmBV,EAASkG,EAAYU,EAAGT,MOpDrCc,EAAe,SAC1BC,EACA3E,OAAAC,OAAA,IAAAD,EAAA,GAAAA,EACEE,EAAAD,EAAA2E,kBAAAA,OAAA,IAAA1E,GAAAA,EACA2E,EAAA5E,EAAAqD,eAAAA,OAAA,IAAAuB,GAAAA,EACAC,EAAA7E,EAAA8E,gBAAAA,OAAA,IAAAD,GAAAA,EACAE,EAAA/E,EAAAgF,aAAAA,OAAA,IAAAD,EAAAE,EAAAC,OAAAC,SAAAL,GAAAC,EAIAK,EAAApF,EAAAqF,oBAAAA,OAAA,IAAAD,EAAA,IAAAA,EACAE,EAAAtF,EAAAuF,uBAAAA,OAAA,IAAAD,EAAA,GAAAA,EACAE,EAAAxF,EAAAyF,aAAAA,OAAA,IAAAD,EAAA,EAAAA,EACAlC,EAAAtD,EAAAsD,gBACAoC,EAAA1F,EAAA2F,aAAAA,OAAA,IAAAD,EAAA,GAAAA,EDdFnC,EAAQqC,YFI2BC,EGiB7BC,EACJC,MAAMC,QAAQL,IAAiBA,EAAa3I,OACxC2I,EAAaM,KAAG,SAAErH,GAAkB,OAAAA,EAAMsH,cAC1C,GAGNC,EAAiBzB,EAAeM,GAC7BoB,QAAM,SAAEnF,GAAe,OAAC6E,EAAoBtE,SAASP,EAAKd,IAAI+F,eAC9DtG,SAAO,SAAEqB,OAEFoF,EAAW7J,EAAA,CACfiE,aAAc4E,EACd3E,gBAAiB6E,EACjBnF,MAAOqF,GACJxE,GAILmC,EAAciD,EAAahD,EAAgBC,GH/BrB,SAC1BrC,EACAoC,EACAC,GAEAgD,EAAUrF,KACRA,EAAKd,KAAG,SACPA,EAAaoG,WACN9I,GAAuB,QAAhBsC,EAAAwG,SAAgB,IAAAxG,OAAA,EAAAA,EAAEtC,OAAQ,GACjCsG,GAA0B,QAAhB/D,EAAAuG,SAAgB,IAAAvG,OAAA,EAAAA,EAAE+D,UAAW,GACvCyC,EAAapF,EAAUjB,GAGvBE,EAAed,EACJ,OAAfiH,EACIA,EAAWC,OACXnF,EAAoBnB,EAAI+F,WAAY,MAEpC5F,EAA8B,iBAAT7C,EAAoBoG,KAAKC,MAAMrG,GAAQA,EAC5D8C,EAAiBwD,EAGjBvD,EAAeS,EAAK+C,WAAW3D,EAAcC,GAC7C2D,EAA6BjD,EACjCR,EACAS,EACA,CACEZ,aAAYA,EACZC,YAAWA,EACXC,eAAcA,GAEhB+C,GAGIY,EAA8B,CAClCH,QAASE,EAAavD,gBACtByD,OAAQF,EAAaxD,aACrBhD,KAAMwG,EAAazD,cAerB,OAZI6C,GACFvD,EACEmB,EACA,CACEZ,aAAYA,EACZC,YAAWA,EACXC,eAAcA,GAEhB0D,GAIGC,IAET,CACE9D,MAAOa,EAAKb,QGvBZsG,CAAgBL,EAAahD,EAAgBC,MDrClB,SAAIqB,GAC/BA,GACFpB,EAAQC,IAAImD,EAAAA,OCuCdC,CAAqBjC,GH5CY,SAAIA,GACrC2B,EAAUO,OAAOlC,kBAAoBA,EG4CrCmC,CAAuBnC,GHzCYkB,GG4Cd,EH3CrBS,EAAUO,OAAOhB,gBAAkBA,GGmDxBZ,EAA+B,SAC1CE,EACAL,OAEMtF,EAAiBsF,EAEnBK,EAAS4B,KAAKC,QAAQ,gBAAiB,IACvC7B,EAASsB,OAEL1G,EAAAR,EAAAC,GAAAwF,aAAAA,OAAA,IAAAjF,EAAA,UAAAA,EAER,GAAIgG,MAAMC,QAAQhB,GAChB,MAAM,IAAIrD,MAAM,6CAGlB,OAAOqD,GAQHmB,EAAgB,SACpBzB,EACAM,OAEMiC,EAAevC,EAAcwC,QAEnC,GAAqB,YAAjBlC,EACF,OAAOiC,MAGHE,EAAgBzC,EAAcM,GAEpC,IAAKmC,EACH,MAAM,IAAIxF,MAAM,sCAAsCqD,EAAY,KAGpE,OP0BK,WACH,IAAK,IAAI3F,EAAK,GAAIxC,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CwC,EAAKA,EAAG+H,OAAOnI,EAAOlC,UAAUF,KACpC,OAAOwC,EO7BTgI,CACKF,EACAF,EAAab,QAAM,SACnBkB,GACC,OAIO,IAJPH,EAAcI,WAAS,SACpBtG,GACC,OAAAA,EAAKf,SAAWoH,EAAYpH,QAC5Be,EAAKd,IAAI+F,aAAeoB,EAAYnH,IAAI+F,mBCrHpDsB,EAAA,WAKA,SAAAA,YAEEA,EAAAtK,UAAAuK,aAAA,SAAa/C,EAA8BgD,GACzCjD,EAAgBC,EAAegD,wBAHlCC,EAAAA,WAAUC,KAAA,CAAC,CAAEC,WAAY,2GAL1B","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Extracts query string params and return them as an object.\n * @param locationSearch Query string to process.\n */\nexport const parseQueryParams = (\n  locationSearch: string = ''\n): Record<string, string> => {\n  const urlSearchParams = new URLSearchParams(locationSearch);\n\n  const queryParams = {};\n\n  urlSearchParams.forEach((value: string, key: string) => {\n    queryParams[key] = value;\n  });\n\n  return queryParams;\n};\n","import { Mock, MockRequest, MockResponse } from './../http-mocks.model';\n\n/**\n * Creates a collapsed group console log of the mock's request and response.\n */\nexport const logMock = (\n  { method, url, delay }: Mock,\n  { requestQuery, requestBody, requestHeaders }: MockRequest,\n  { responseBody, responseCode, responseHeaders }: MockResponse\n): void => {\n  console.groupCollapsed(`${method} ${url}`);\n\n  console.log('Status:', responseCode);\n  console.log('Delay:', delay);\n\n  console.group('Request');\n  console.log('Headers:', requestHeaders);\n  console.log('Query:', requestQuery);\n  console.log('Body:', requestBody);\n  console.groupEnd();\n\n  console.group('Response');\n  console.log('Headers:', responseHeaders);\n  console.log('Body:', responseBody);\n  console.groupEnd();\n\n  console.groupEnd();\n};\n","import {\n  Mock,\n  MockOptions,\n  MockResponse,\n  MockRequest\n} from './../http-mocks.model';\n\nexport const handleProxyFn = (\n  responseBody: any,\n  mock: Mock,\n  mockRequest: MockRequest,\n  proxyFn?: MockOptions['responseProxyFn']\n): MockResponse => {\n  return proxyFn && typeof proxyFn === 'function'\n    ? proxyFn(\n        responseBody,\n        {\n          url: mock.url,\n          method: mock.method,\n          responseCode: mock.responseCode,\n          responseHeaders: mock.responseHeaders\n        },\n        mockRequest\n      )\n    : {\n        responseBody,\n        responseCode: mock.responseCode,\n        responseHeaders: mock.responseHeaders\n      };\n};\n","import {\n  MockOptions as FetchMockOptions,\n  MockResponse as FetchMockResponse\n} from 'fetch-mock';\n\nimport fetchMock from 'fetch-mock/es5/client';\n\nimport { parseQueryParams } from './query';\n\nimport { logMock } from './log';\n\nimport { handleProxyFn } from './proxy';\n\nimport { Mock, MockOptions, MockResponse } from './../http-mocks.model';\n\nexport const fallbackToNetworkFetch = (fallbackToNetwork: boolean) => {\n  fetchMock.config.fallbackToNetwork = fallbackToNetwork;\n};\n\nexport const overwriteRoutesFetch = (overwriteRoutes: boolean) => {\n  fetchMock.config.overwriteRoutes = overwriteRoutes;\n};\n\nexport const createFetchMock = (\n  mock: Mock,\n  loggingEnabled: boolean,\n  responseProxyFn: MockOptions['responseProxyFn']\n): void => {\n  fetchMock.mock(\n    mock.url,\n    (url: RegExp, fetchMockOptions: FetchMockOptions) => {\n      const body = fetchMockOptions?.body || {};\n      const headers = fetchMockOptions?.headers || {};\n      const createdURL = createURL(url);\n\n      // request\n      const requestQuery = parseQueryParams(\n        createdURL !== null\n          ? createdURL.search\n          : removeAllBeforeChar(url.toString(), '?')\n      );\n      const requestBody = typeof body === 'string' ? JSON.parse(body) : body;\n      const requestHeaders = headers;\n\n      // response\n      const responseBody = mock.responseFn(requestQuery, requestBody);\n      const responseData: MockResponse = handleProxyFn(\n        responseBody,\n        mock,\n        {\n          requestQuery,\n          requestBody,\n          requestHeaders\n        },\n        responseProxyFn\n      );\n\n      const response: FetchMockResponse = {\n        headers: responseData.responseHeaders,\n        status: responseData.responseCode,\n        body: responseData.responseBody\n      };\n\n      if (loggingEnabled) {\n        logMock(\n          mock,\n          {\n            requestQuery,\n            requestBody,\n            requestHeaders\n          },\n          responseData\n        );\n      }\n\n      return response;\n    },\n    {\n      delay: mock.delay\n    }\n  );\n};\n\n/**\n * Tries to create a new instace of URL()\n */\nconst createURL = (url: RegExp | string): URL | null => {\n  try {\n    return new URL(`${url}`);\n  } catch (_) {\n    return null;\n  }\n};\n\n/**\n * Removes all chars before specific char (char includes).\n * If char doesn't exist, returns an empty string.\n */\nconst removeAllBeforeChar = (value: string, char: string): string => {\n  if (!value.includes(char)) {\n    return '';\n  }\n\n  return `${value}`.split(char).pop();\n};\n","// SOURCE: https://github.com/sindresorhus/delay\n\ninterface AbortSignal {\n  readonly aborted: boolean;\n  addEventListener(\n    type: 'abort',\n    listener: () => void,\n    options?: { once?: boolean }\n  ): void;\n  removeEventListener(type: 'abort', listener: () => void): void;\n}\n\ninterface Options {\n  signal?: AbortSignal;\n}\n\ninterface ClearablePromise<T> extends Promise<T> {\n  clear(): void;\n}\n\ninterface Delay {\n  (milliseconds: number, options?: Options): ClearablePromise<void>;\n\n  <T>(\n    milliseconds: number,\n    options?: Options & {\n      value: T;\n    }\n  ): ClearablePromise<T>;\n\n  reject?: (\n    milliseconds: number,\n    options?: Options & {\n      value?: unknown;\n    }\n  ) => ClearablePromise<never>;\n\n  createWithTimers?: (timers: {\n    clearTimeout: typeof clearTimeout;\n    setTimeout: typeof setTimeout;\n  }) => Delay;\n}\n\nconst createAbortError = () => {\n  const error = new Error('Delay aborted');\n  error.name = 'AbortError';\n  return error;\n};\n\nexport const createDelay = ({\n  clearTimeout: defaultClear,\n  setTimeout: set,\n  willResolve\n}: any) => (ms: number, { value, signal } = {} as any) => {\n  if (signal && signal.aborted) {\n    return Promise.reject(createAbortError());\n  }\n\n  let timeoutId;\n  let settle;\n  let rejectFn;\n  const clear = defaultClear || clearTimeout;\n\n  const signalListener = () => {\n    clear(timeoutId);\n    rejectFn(createAbortError());\n  };\n\n  const cleanup = () => {\n    if (signal) {\n      signal.removeEventListener('abort', signalListener);\n    }\n  };\n\n  const delayPromise: any = new Promise((resolve, reject) => {\n    settle = () => {\n      cleanup();\n      if (willResolve) {\n        resolve(value);\n      } else {\n        reject(value);\n      }\n    };\n\n    rejectFn = reject;\n    timeoutId = (set || setTimeout)(settle, ms);\n  });\n\n  if (signal) {\n    signal.addEventListener('abort', signalListener, { once: true });\n  }\n\n  delayPromise.clear = () => {\n    clear(timeoutId);\n    timeoutId = null;\n    settle();\n  };\n\n  return delayPromise;\n};\n\nexport const delay: Delay = createDelay({ willResolve: true });\n\ndelay.reject = createDelay({ willResolve: false });\ndelay.createWithTimers = ({ clearTimeout, setTimeout }) => {\n  const innerDelay: Delay = createDelay({\n    clearTimeout,\n    setTimeout,\n    willResolve: true\n  });\n  innerDelay.reject = createDelay({\n    clearTimeout,\n    setTimeout,\n    willResolve: false\n  });\n  return innerDelay;\n};\n","import xhrMock, {\n  MockRequest as XhrMockRequest,\n  MockResponse as XhrMockResponse,\n  proxy\n} from 'xhr-mock';\n\nimport { delay } from './delay';\n\nimport { logMock } from './log';\n\nimport { handleProxyFn } from './proxy';\n\nimport { Mock, MockOptions, MockResponse } from './../http-mocks.model';\n\nexport const setupXHRMock = (): void => {\n  xhrMock.setup();\n};\n\nexport const fallbackToNetworkXHR = (fallbackToNetwork: boolean) => {\n  if (fallbackToNetwork) {\n    xhrMock.use(proxy);\n  }\n};\n\nexport const createXHRMock = (\n  mock: Mock,\n  loggingEnabled: boolean,\n  responseProxyFn?: MockOptions['responseProxyFn']\n): void => {\n  xhrMock.use(\n    mock.method,\n    mock.url,\n    async (mockRequest: XhrMockRequest, mockResponse: XhrMockResponse) => {\n      // request\n      const requestQuery = mockRequest.url().query || {};\n      const requestBody =\n        mockRequest.body() != null ? JSON.parse(mockRequest.body()) : {};\n      const requestHeaders = mockRequest.headers();\n\n      // response\n      const responseBody = mock.responseFn(requestQuery, requestBody);\n      const responseData: MockResponse = handleProxyFn(\n        responseBody,\n        mock,\n        {\n          requestQuery,\n          requestBody,\n          requestHeaders\n        },\n        responseProxyFn\n      );\n\n      const response = mockResponse\n        .status(responseData.responseCode)\n        .body(responseData.responseBody)\n        .headers(responseData.responseHeaders);\n\n      await delay(mock.delay);\n\n      if (loggingEnabled) {\n        logMock(\n          mock,\n          {\n            requestQuery,\n            requestBody,\n            requestHeaders\n          },\n          responseData\n        );\n      }\n\n      return response;\n    }\n  );\n};\n","import {\n  fallbackToNetworkFetch,\n  overwriteRoutesFetch,\n  createFetchMock,\n  parseQueryParams,\n  setupXHRMock,\n  fallbackToNetworkXHR,\n  createXHRMock\n} from './utils';\n\nimport { MockScenarios, MockOptions, Mock } from './http-mocks.model';\n\n/**\n * Main `http-mocks` method that handles entire creation of mocks for XHR and Fetch API.\n */\nexport const injectHttpMocks = (\n  mockScenarios: MockScenarios,\n  {\n    fallbackToNetwork = true,\n    loggingEnabled = false,\n    useLocationHash = false,\n    mockScenario = extractMockScenarioFromLocation(\n      window.location,\n      useLocationHash\n    ),\n    defaultResponseCode = 200,\n    defaultResponseHeaders = {},\n    defaultDelay = 0,\n    responseProxyFn,\n    ignoredMocks = []\n  }: MockOptions = {}\n): void => {\n  // this needs to be placed before creating the XHR mocks\n  setupXHRMock();\n\n  // convert ignored mocks RegExps to the strings\n  const ignoredMocksStrings: string[] =\n    Array.isArray(ignoredMocks) && ignoredMocks.length\n      ? ignoredMocks.map((value: RegExp) => value.toString())\n      : [];\n\n  // pick the right scenario mocks and create mock for every mock definition\n  getScenarioMocks(mockScenarios, mockScenario)\n    .filter((mock: Mock) => !ignoredMocksStrings.includes(mock.url.toString()))\n    .forEach((mock: Mock) => {\n      // use default values in the first place\n      const updatedMock: Mock = {\n        responseCode: defaultResponseCode,\n        responseHeaders: defaultResponseHeaders,\n        delay: defaultDelay,\n        ...mock\n      };\n\n      // create mocks for both XHR an Fetch API\n      createXHRMock(updatedMock, loggingEnabled, responseProxyFn);\n      createFetchMock(updatedMock, loggingEnabled, responseProxyFn);\n    });\n\n  // turn `fallbackToNetwork` on/off\n  fallbackToNetworkXHR(fallbackToNetwork);\n  fallbackToNetworkFetch(fallbackToNetwork);\n\n  // turn `overwriteRoutesFetch` on/off (Fetch API only)\n  overwriteRoutesFetch(true);\n};\n\n/**\n * Gets the corresponding value for `mockScenario` key in the browser's Location object.\n * @param location The location object (accesible via `window.location`)\n * @param useLocationHash Whether during a search for search params in URL accept hashtag or not.\n */\nexport const extractMockScenarioFromLocation = (\n  location: Location,\n  useLocationHash: boolean\n): string => {\n  const locationSearch = useLocationHash\n    ? // remove leading symbols like: `#`, `#/`, `/`\n      location.hash.replace(/^(#\\/|#|\\/)+/g, '')\n    : location.search;\n\n  const { mockScenario = 'default' } = parseQueryParams(locationSearch);\n\n  if (Array.isArray(mockScenario)) {\n    throw new Error('Error during processing the mock scenario');\n  }\n\n  return mockScenario;\n};\n\n/**\n * Picks the mocks from the current mock scenario.\n * @param mockScenarios Map of the mock scenarios.\n * @param mockScenario Key of the current mock scenario.\n */\nconst getScenarioMocks = (\n  mockScenarios: MockScenarios,\n  mockScenario: keyof MockScenarios\n): Mock[] => {\n  const defaultMocks = mockScenarios.default;\n\n  if (mockScenario === 'default') {\n    return defaultMocks;\n  }\n\n  const selectedMocks = mockScenarios[mockScenario];\n\n  if (!selectedMocks) {\n    throw new Error(`No mocks found for mock scenario: '${mockScenario}'`);\n  }\n\n  return [\n    ...selectedMocks,\n    ...defaultMocks.filter(\n      (defaultMock: Mock) =>\n        selectedMocks.findIndex(\n          (mock: Mock) =>\n            mock.method === defaultMock.method &&\n            mock.url.toString() === defaultMock.url.toString()\n        ) === -1\n    )\n  ];\n};\n","import { Injectable } from '@angular/core';\n\nimport { MockScenarios, MockOptions } from './http-mocks.model';\nimport { injectHttpMocks } from './inject-http-mocks';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpMocksService {\n  setHttpMocks(mockScenarios: MockScenarios, mockOptions: MockOptions) {\n    injectHttpMocks(mockScenarios, mockOptions);\n  }\n}\n"]}